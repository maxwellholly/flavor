{"ast":null,"code":"var _jsxFileName = \"/Users/hollymaxwell/Desktop/flavor/src/pages/MealPlans.js\";\nimport React, { Component } from 'react';\nimport Recipe from '../components/recipe/Recipe';\nimport { Route, Switch } from 'react-router-dom';\nimport Day from '../components/day/Day';\nimport Week from '../components/week/Week';\nimport { NavLink } from 'react-router-dom';\nimport Form from '../components/form/Form';\n\nclass MealPlans extends Component {\n  constructor(props) {\n    super(props);\n    this.styles = {\n      pageTitle: {\n        fontSize: '1.5rem',\n        marginTop: '100px',\n        marginBottom: '30px',\n        textAlign: 'center'\n      },\n      container: {\n        width: '90%',\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        position: 'relative'\n      },\n      recipes: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        flexFlow: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between'\n      }\n    };\n    this.state = {\n      duration: \"day\",\n      recipes: []\n    };\n  }\n\n  handleGetMeals(calories, diet, exclude, name) {\n    console.log(this);\n    let api = \"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/mealplans/generate?timeFrame=\" + name;\n\n    if (calories.trim() !== \"\") {\n      api = api + \"&targetCalories=\" + calories;\n    }\n\n    if (diet.trim() !== \"\") {\n      api = api + \"&diet=\" + diet;\n    }\n\n    if (exclude.trim() !== \"\") {\n      api = api + \"&exclude=\" + exclude;\n    }\n\n    this.props.getMeals(api, function (response) {\n      this.setState({\n        loaded: true,\n        recipes: response\n      });\n    }.bind(this));\n  }\n\n  render() {\n    let recipeList = this.state.recipes.map((element, i) => {\n      let diet;\n\n      if (element.vegetarian === true) {\n        diet = 'Vegetarian';\n      } else if (element.vegan === true) {\n        diet = 'Vegan';\n      } else if (element.glutenFree === true) {\n        diet = 'Gluten free';\n      } else {\n        diet = '';\n      }\n\n      return /*#__PURE__*/React.createElement(Recipe, {\n        key: i,\n        val: element,\n        diet: diet,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: this.styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function () {\n        this.setState({\n          duration: \"day\"\n        });\n      }.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Day\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function () {\n        this.setState({\n          duration: \"week\"\n        });\n      }.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, \"Week\"), /*#__PURE__*/React.createElement(\"h2\", {\n      style: this.styles.pageTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Meal Planner\"), /*#__PURE__*/React.createElement(Form, {\n      handleGetMeals: this.handleGetMeals,\n      name: this.state.duration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }), this.state.loaded ? /*#__PURE__*/React.createElement(\"div\", {\n      style: this.styles.recipes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, recipeList) : null);\n  }\n\n}\n\nexport default MealPlans;","map":{"version":3,"sources":["/Users/hollymaxwell/Desktop/flavor/src/pages/MealPlans.js"],"names":["React","Component","Recipe","Route","Switch","Day","Week","NavLink","Form","MealPlans","constructor","props","styles","pageTitle","fontSize","marginTop","marginBottom","textAlign","container","width","height","marginLeft","marginRight","position","recipes","display","flexFlow","flexWrap","justifyContent","state","duration","handleGetMeals","calories","diet","exclude","name","console","log","api","trim","getMeals","response","setState","loaded","bind","render","recipeList","map","element","i","vegetarian","vegan","glutenFree"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Recipe from '../components/recipe/Recipe'\nimport {Route, Switch} from 'react-router-dom'\nimport Day from '../components/day/Day'\nimport Week from '../components/week/Week'\nimport {NavLink} from 'react-router-dom';\nimport Form from '../components/form/Form'\n\nclass MealPlans extends Component {\n    constructor(props){\n        super(props);\n        this.styles = {\n            pageTitle: {\n                fontSize: '1.5rem',\n                marginTop: '100px',\n                marginBottom: '30px',\n                textAlign: 'center'\n            },\n            container: {\n                width: '90%',\n                height: '100%',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                position: 'relative'\n            },\n            recipes: {\n                width: '100%',\n                height: '100%',\n                display: 'flex',\n                flexFlow: 'row',\n                flexWrap: 'wrap',\n                justifyContent: 'space-between'\n            }\n        };\n        this.state = {\n            duration: \"day\",\n            recipes: []\n        }\n    }\n\n    handleGetMeals(calories, diet, exclude, name) {\n        console.log(this);\n        let api = \"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/mealplans/generate?timeFrame=\" + name;\n\n        if(calories.trim() !== \"\") {\n            api = api + \"&targetCalories=\" + calories;\n        }\n\n        if(diet.trim() !== \"\") {\n            api = api + \"&diet=\" + diet;\n        }\n\n        if(exclude.trim() !== \"\") {\n            api = api + \"&exclude=\" + exclude;\n        }\n\n        this.props.getMeals(api, function(response){\n            this.setState({loaded: true, recipes: response});\n        }.bind(this));\n    };\n\n    render() {\n        let recipeList  = this.state.recipes.map((element, i) => {\n            let diet;\n            if(element.vegetarian === true) {\n                diet = 'Vegetarian'\n            } else if(element.vegan === true) {\n                diet = 'Vegan'\n            } else if(element.glutenFree === true) {\n                diet = 'Gluten free'\n            } else {\n                diet = ''\n            }\n            return <Recipe key={i} val={element} diet={diet}/>\n        });\n        return (\n            <div style={this.styles.container}>\n                <button onClick={function(){\n                    this.setState({\n                        duration: \"day\"\n                    })\n                }.bind(this)}>Day</button>\n                <button onClick={function(){\n                    this.setState({\n                        duration: \"week\"\n                    })\n                }.bind(this)}>Week</button>\n                <h2 style={this.styles.pageTitle}>Meal Planner</h2>\n\n                <Form handleGetMeals={this.handleGetMeals} name={this.state.duration}/>\n                {this.state.loaded ?\n                    <div style={this.styles.recipes}>\n                        {recipeList}\n                    </div>\n                    : null}\n            </div>\n        );\n    }\n}\n\nexport default MealPlans;"]},"metadata":{},"sourceType":"module"}