{"ast":null,"code":"var _jsxFileName = \"/Users/hollymaxwell/Desktop/flavor/src/pages/MealPlans.js\";\nimport React, { Component } from 'react';\nimport Recipe from '../components/recipe/Recipe';\nimport { Route, Switch } from 'react-router-dom';\nimport Day from '../components/day/Day';\nimport Week from '../components/week/Week';\nimport { NavLink } from 'react-router-dom';\nimport Form from '../components/form/Form';\n\nclass MealPlans extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleGetMeals = (calories, diet, exclude, name) => {\n      let api = \"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/mealplans/generate?timeFrame=\" + name;\n\n      if (calories.trim() !== \"\") {\n        api = api + \"&targetCalories=\" + calories;\n      }\n\n      if (diet.trim() !== \"\") {\n        api = api + \"&diet=\" + diet;\n      }\n\n      if (exclude.trim() !== \"\") {\n        api = api + \"&exclude=\" + exclude;\n      }\n\n      this.props.getMeals(api, function (response) {\n        if (response.meals) {\n          this.setState({\n            loaded: true,\n            recipes: response.meals\n          });\n        } else if (response.items) {\n          let complex = [];\n          let api;\n\n          for (let i = 0; i < response.items.length; i++) {\n            response.items[i].id = JSON.parse(response.items[i].value).id;\n            api = \"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/\" + JSON.parse(response.items[i].value).id + \"/information\";\n            this.props.getMeals(api, function (response) {\n              complex.push(response);\n            });\n          }\n\n          console.log(complex);\n          this.setState({\n            loaded: true,\n            recipes: response.items\n          });\n        } else {}\n      }.bind(this));\n    };\n\n    this.styles = {\n      pageTitle: {\n        fontSize: '1.5rem',\n        marginTop: '100px',\n        marginBottom: '30px',\n        textAlign: 'center'\n      },\n      container: {\n        width: '90%',\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        position: 'relative'\n      },\n      recipes: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        flexFlow: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between'\n      }\n    };\n    this.state = {\n      duration: \"day\",\n      recipes: [],\n      nutrition: []\n    };\n  }\n\n  render() {\n    console.log(this.state.recipes);\n    let recipeList = this.state.recipes.map((element, i) => {\n      let diet;\n\n      if (element.vegetarian === true) {\n        diet = 'Vegetarian';\n      } else if (element.vegan === true) {\n        diet = 'Vegan';\n      } else if (element.glutenFree === true) {\n        diet = 'Gluten free';\n      } else {\n        diet = '';\n      }\n\n      if (element.day) {\n        let values = JSON.parse(element.value);\n        element.image = \"https://spoonacular.com/recipeImages/\" + values.id + \"-240x150.\" + values.imageType;\n        element.title = values.title;\n      } else {\n        element.image = \"https://spoonacular.com/recipeImages/\" + element.id + \"-240x150.\" + element.imageType;\n      }\n\n      return /*#__PURE__*/React.createElement(Recipe, {\n        key: i,\n        val: element,\n        diet: diet,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: this.styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function () {\n        this.setState({\n          duration: \"day\"\n        });\n      }.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"Day\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function () {\n        this.setState({\n          duration: \"week\"\n        });\n      }.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, \"Week\"), /*#__PURE__*/React.createElement(\"h2\", {\n      style: this.styles.pageTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, \"Meal Planner\"), /*#__PURE__*/React.createElement(Form, {\n      handleGetMeals: this.handleGetMeals,\n      name: this.state.duration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }), this.state.loaded ? /*#__PURE__*/React.createElement(\"div\", {\n      style: this.styles.recipes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, recipeList) : null);\n  }\n\n}\n\nexport default MealPlans;","map":{"version":3,"sources":["/Users/hollymaxwell/Desktop/flavor/src/pages/MealPlans.js"],"names":["React","Component","Recipe","Route","Switch","Day","Week","NavLink","Form","MealPlans","constructor","props","handleGetMeals","calories","diet","exclude","name","api","trim","getMeals","response","meals","setState","loaded","recipes","items","complex","i","length","id","JSON","parse","value","push","console","log","bind","styles","pageTitle","fontSize","marginTop","marginBottom","textAlign","container","width","height","marginLeft","marginRight","position","display","flexFlow","flexWrap","justifyContent","state","duration","nutrition","render","recipeList","map","element","vegetarian","vegan","glutenFree","day","values","image","imageType","title"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Recipe from '../components/recipe/Recipe'\nimport {Route, Switch} from 'react-router-dom'\nimport Day from '../components/day/Day'\nimport Week from '../components/week/Week'\nimport {NavLink} from 'react-router-dom';\nimport Form from '../components/form/Form'\n\nclass MealPlans extends Component {\n    constructor(props){\n        super(props);\n        this.styles = {\n            pageTitle: {\n                fontSize: '1.5rem',\n                marginTop: '100px',\n                marginBottom: '30px',\n                textAlign: 'center'\n            },\n            container: {\n                width: '90%',\n                height: '100%',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                position: 'relative'\n            },\n            recipes: {\n                width: '100%',\n                height: '100%',\n                display: 'flex',\n                flexFlow: 'row',\n                flexWrap: 'wrap',\n                justifyContent: 'space-between'\n            }\n        };\n        this.state = {\n            duration: \"day\",\n            recipes: [],\n            nutrition: []\n        }\n    }\n\n    handleGetMeals = (calories, diet, exclude, name) => {\n        let api = \"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/mealplans/generate?timeFrame=\" + name;\n\n        if(calories.trim() !== \"\") {\n            api = api + \"&targetCalories=\" + calories;\n        }\n\n        if(diet.trim() !== \"\") {\n            api = api + \"&diet=\" + diet;\n        }\n\n        if(exclude.trim() !== \"\") {\n            api = api + \"&exclude=\" + exclude;\n        }\n\n        this.props.getMeals(api, function(response){\n\n            if(response.meals) {\n                this.setState({loaded: true, recipes: response.meals});\n            } else if (response.items) {\n                let complex = [];\n                let api;\n                for(let i = 0; i < response.items.length; i++) {\n                    response.items[i].id = JSON.parse(response.items[i].value).id;\n                    api = \"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/\" + JSON.parse(response.items[i].value).id + \"/information\"\n                    this.props.getMeals(api, function(response) {\n                        complex.push(response);\n                    })\n                }\n                console.log(complex);\n                this.setState({loaded: true, recipes: response.items});\n            } else {\n\n            }\n        }.bind(this));\n    };\n\n    render() {\n        console.log(this.state.recipes);\n        let recipeList  = this.state.recipes.map((element, i) => {\n            let diet;\n            if(element.vegetarian === true) {\n                diet = 'Vegetarian'\n            } else if(element.vegan === true) {\n                diet = 'Vegan'\n            } else if(element.glutenFree === true) {\n                diet = 'Gluten free'\n            } else {\n                diet = ''\n            }\n            if (element.day) {\n                let values = JSON.parse(element.value);\n                element.image = \"https://spoonacular.com/recipeImages/\" + values.id + \"-240x150.\" + values.imageType;\n                element.title = values.title;\n            } else {\n                element.image = \"https://spoonacular.com/recipeImages/\" + element.id + \"-240x150.\" + element.imageType;\n            }\n            return <Recipe key={i} val={element} diet={diet}/>\n        });\n        return (\n            <div style={this.styles.container}>\n                <button onClick={function(){\n                    this.setState({\n                        duration: \"day\"\n                    })\n                }.bind(this)}>Day</button>\n                <button onClick={function(){\n                    this.setState({\n                        duration: \"week\"\n                    })\n                }.bind(this)}>Week</button>\n                <h2 style={this.styles.pageTitle}>Meal Planner</h2>\n\n                <Form handleGetMeals={this.handleGetMeals} name={this.state.duration}/>\n                {this.state.loaded ?\n                    <div style={this.styles.recipes}>\n                        {recipeList}\n                    </div>\n                    : null}\n            </div>\n        );\n    }\n}\n\nexport default MealPlans;"]},"metadata":{},"sourceType":"module"}